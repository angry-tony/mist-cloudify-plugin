# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_0

imports:
    # importing cloudify related types, plugins, workflow, etc...
    # to speed things up, it is possible downloading this file,
    # including it in the blueprint directory and importing it
    # instead.
    - http://www.getcloudify.org/spec/cloudify/3.3m5/types.yaml
    - http://www.getcloudify.org/spec/diamond-plugin/1.3m5/plugin.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - http://www.getcloudify.org/spec/fabric-plugin/1.1/plugin.yaml
    - test_plugin.yaml

inputs:
    # example input that could be injected by test
    test_input:
        description: an input for the test
        default: default_test_input
    ssh_user:
        description: an input for the test
        default: ec2-user
    private_key_path:
        description: an input for the test
        default: ssh_keys/id-rsa
    username:
        description: an input for the test
        default: 'vkefallinos@gmail.com'
    password:
        description: an input for the test
        default: '6#X%*CqNmZbCfb^wyuC'
    key_name:
        description: an input for the test
        default: demo_lamp
    backend_id:
        description: an input for the test
        default: 3ZWJJEemA4hoMaxUZiWQgi686Rvi
    image_id:
        description: an input for the test
        default: ami-5da23a2a
    size_id:
        description: an input for the test
        default: t1.micro
    location_id:
        description: an input for the test
        default: '0'
    key_external_resource:
        description: an input for the test
        default: true
    node_external_resource:
        description: an input for the test
        default: true   
    monitoring:
        description: an input for the test
        default: false
    name:
        description: an input for the test
        default: lamptest
    node_external_resource_id:
        description: an input for the test
        default: i-6859fbc4


node_templates:
    # defining a single node template that will serve as our test node
    test_server_key:
        type: cloudify.mist.nodes.KeyPair
        properties:
            use_external_resource: { get_input: key_external_resource }
            resource_id: { get_input: key_name }
            private_key_path: { get_input: private_key_path }
            mist_config:
                username: { get_input: username }
                password: { get_input: password }            
            parameters:
                backend_id: { get_input: backend_id }
                image_id: { get_input: image_id }
                size_id: { get_input: size_id }
                location_id: { get_input: location_id }
                name: { get_input: name } 
                monitoring: { get_input: monitoring }    
    test_server_node:
        # using base cloudify type
        type: cloudify.mist.nodes.Server    # cloudify.nodes.Root
        properties:
            install_agent: false
            use_external_resource: { get_input: node_external_resource }
            resource_id: { get_input: node_external_resource_id }
            parameters:
                key_name: { get_input: key_name }
                backend_id: { get_input: backend_id }
                image_id: { get_input: image_id }
                size_id: { get_input: size_id }
                location_id: { get_input: location_id }
                name: { get_input: name } 
                monitoring: { get_input: monitoring }
            mist_config:
                username: { get_input: username }
                password: { get_input: password }
        relationships:
            - target: test_server_key
              type: cloudify.mist.relationships.server_connected_to_keypair


