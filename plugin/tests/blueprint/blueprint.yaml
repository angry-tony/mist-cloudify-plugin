# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_0

imports:
    # importing cloudify related types, plugins, workflow, etc...
    # to speed things up, it is possible downloading this file,
    # including it in the blueprint directory and importing it
    # instead.
    - http://www.getcloudify.org/spec/cloudify/3.3m5/types.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - http://www.getcloudify.org/spec/fabric-plugin/1.1/plugin.yaml
    - test_plugin.yaml

inputs:
    # example input that could be injected by test
    test_input:
        description: an input for the test
        default: default_test_input

node_templates:
    # defining a single node template that will serve as our test node
    test_node_template:
        # using base cloudify type
        type: cloudify.mist.nodes.Server    # cloudify.nodes.Root
        properties:
            install_agent: False
        # interfaces:
        #     start:
        #         implementation: fabric.fabric_plugin.tasks.run_commands
        #         inputs:
        #             commands:
        #                 - apt-get install -y curl
        #                 - curl -X PUT http://mistio.iriscouch.com/demo
        #     stop:       
        #         implementation: mist.plugin.server.stop
    #outputs:
    #    # example output the could be used to simplify assertions by test
    #    test_output:
    #        description: an output for the test
    #        value: { get_attribute: [test_node_template, some_property] }
