tosca_definitions_version: cloudify_dsl_1_1

plugins:
    mist:
        executor: central_deployment_agent
        source: "https://github.com/mistio/cloudify-mist-plugin/archive/master.zip"

node_types:
  cloudify.mist.nodes.KeyPair:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Amazon AWS.
        type: string
        default: ''
      private_key_path:
        description: >
          The path where the key should be saved on the machine. If this is a bootstrap
          process, this refers to the local computer. If this will run on the manager,
          this will be saved on the manager.
        type: string
        default: ''
      parameters:
        description: >
          The key value pair parameters required by Mist Client to use
          the mist.client.backend.create_machine command.(backend_id,image_id
          size_id, location_id, name, monitoring, ssh_user, networks)
        default: {}
      mist_config:
        description: >
          A dictionary of values to pass to authenticate with the Mist API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create: mist.plugin.keypair.create
        delete: mist.plugin.keypair.delete
      cloudify.interfaces.validation:
        creation: mist.plugin.keypair.creation_validation


  cloudify.mist.nodes.Server:
    derived_from: cloudify.nodes.Compute
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Mist.io.
        type: string
        default: ''
      parameters:
        description: >
          The key value pair parameters required by Mist Client to use
          the mist.client.backend.create_machine command.(backend_id,image_id
          size_id, location_id, name, monitoring, ssh_user, networks )
        default: {}
      mist_config:
        description: >
          A dictionary of values to pass to authenticate with the Mist API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: mist.plugin.server.create
          inputs:
            use_external_resource:
              default: false
            mist_config:
              default: {}
        start:
          implementation: mist.plugin.server.start
          inputs:
            start_retry_interval:
              description: Polling interval until the server is active in seconds
              type: integer
              default: 30
        stop:
          implementation: mist.plugin.server.stop
          inputs:
            mist_config:
              default: {}
        delete:
          implementation: mist.plugin.server.delete
          inputs:
            mist_config:
              default: {}
      cloudify.interfaces.validation:
        creation:
          implementation: mist.plugin.server.creation_validation
          inputs:
            args:
              default: {}


  cloudify.mist.nodes.KubernetesMaster:
    derived_from: cloudify.nodes.Compute
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      multicloud:
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Mist.io.
        type: string
        default: ''
      parameters:
        description: >
          The key value pair parameters required by Mist Client to use
          the mist.client.backend.create_machine command.(backend_id,image_id
          size_id, location_id, name, monitoring, ssh_user, networks )
        default: {}
      mist_config:
        description: >
          A dictionary of values to pass to authenticate with the Mist API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: mist.plugin.server.create
          inputs:
            use_external_resource:
              default: false
            mist_config:
              default: {}
        start:
          implementation: mist.plugin.server.start
          inputs:
            start_retry_interval:
              description: Polling interval until the server is active in seconds
              type: integer
              default: 30
        stop:
          implementation: mist.plugin.server.stop
          inputs:
            mist_config:
              default: {}
        delete:
          implementation: mist.plugin.server.delete
          inputs:
            mist_config:
              default: {}
      kuberneteslifecycle:
        configure:
          implementation: mist.plugin.kubernetes.run_script
          inputs:
            script:
              type: string
              default: "scripts/install_docker.sh"
        deploy:
          implementation: mist.plugin.kubernetes.run_script
          inputs:
            script:
              type: string
              default: "https://github.com/kubernetes/kubernetes"
            entrypoint:
              type: string
              default: "docs/getting-started-guides/docker-multinode/master.sh"
            su:
              type: boolean
              default: true
            env:
              default: { "MASTER_IP": { get_attribute: [SELF, ip]}}
            start_retry_interval:
              description: Polling interval until the server is active in seconds
              type: integer
              default: 30
      cloudify.interfaces.validation:
        creation:
          implementation: mist.plugin.server.creation_validation
          inputs:
            args:
              default: {}



  cloudify.mist.nodes.KubernetesWorker:
    derived_from: cloudify.nodes.Compute
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Mist.io.
        type: string
        default: ''
      parameters:
        description: >
          The key value pair parameters required by Mist Client to use
          the mist.client.backend.create_machine command.(backend_id,image_id
          size_id, location_id, name, monitoring, ssh_user, networks )
        default: {}
      mist_config:
        description: >
          A dictionary of values to pass to authenticate with the Mist API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: mist.plugin.server.create
          inputs:
            use_external_resource:
              default: false
            mist_config:
              default: {}
        start:
          implementation: mist.plugin.server.start
          inputs:
            start_retry_interval:
              description: Polling interval until the server is active in seconds
              type: integer
              default: 30
        stop:
          implementation: mist.plugin.server.stop
          inputs:
            mist_config:
              default: {}
        delete:
          implementation: mist.plugin.server.delete
          inputs:
            mist_config:
              default: {}

      kuberneteslifecycle:
        configure:
          implementation: mist.plugin.kubernetes.run_script
          inputs:
            script:
              type: string
              default: "scripts/install_docker.sh"
        deploy:
          implementation: mist.plugin.kubernetes.run_script
          inputs:
            script:
              type: string
              default: "https://github.com/kubernetes/kubernetes"
            entrypoint:
              type: string
              default: "docs/getting-started-guides/docker-multinode/worker.sh"
            su:
              type: boolean
              default: true
            env:
              default: { "MASTER_IP": { get_attribute: [SELF, ip]}}
            start_retry_interval:
              description: Polling interval until the server is active in seconds
              type: integer
              default: 30
      cloudify.interfaces.validation:
        creation:
          implementation: mist.plugin.server.creation_validation
          inputs:
            args:
              default: {}


relationships:
  cloudify.mist.relationships.server_connected_to_keypair:
    derived_from: cloudify.relationships.connected_to

